name: PR Check for Version Labels

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize, reopened]

jobs:
  check-version-labels:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    
    steps:
      - name: Check and manage version bump labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const versionLabels = labels.filter(label => 
              ['patch', 'minor', 'major'].includes(label.name)
            );
            
            if (versionLabels.length === 0) {
              console.log('No version bump label found. Adding default "patch" label');
              
              try {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  labels: ['patch']
                });
                console.log('Successfully added "patch" label');
              } catch (error) {
                console.error('Failed to add patch label:', error);
                // Check if the label exists, if not create it
                try {
                  await github.rest.issues.createLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: 'patch',
                    color: '0366d6',
                    description: 'Backward compatible bug fixes'
                  });
                  
                  // Try adding the label again
                  await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    labels: ['patch']
                  });
                  console.log('Created and added "patch" label');
                } catch (createError) {
                  console.error('Failed to create and add patch label:', createError);
                  core.setFailed('Failed to add patch label');
                }
              }
              return;
            }
            
            if (versionLabels.length > 1) {
              core.setFailed('PR must have exactly one version bump label. Found: ' + 
                versionLabels.map(l => l.name).join(', '));
              return;
            }
            
            console.log('PR has the required version bump label: ' + versionLabels[0].name); 